// Generated by view binder compiler. Do not edit!
package com.example.spaTi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spaTi.R;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNoteDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout addTagLl;

  @NonNull
  public final ImageView back;

  @NonNull
  public final TextView backText;

  @NonNull
  public final ConstraintLayout contentLayout;

  @NonNull
  public final NestedScrollView contentNsv;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView dateLabel;

  @NonNull
  public final ImageView delete;

  @NonNull
  public final EditText description;

  @NonNull
  public final ImageView done;

  @NonNull
  public final ImageView edit;

  @NonNull
  public final View middleDivider;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final View space;

  @NonNull
  public final ImageView tagAdd;

  @NonNull
  public final TextView tagLabel;

  @NonNull
  public final ChipGroup tags;

  @NonNull
  public final EditText title;

  @NonNull
  public final View topDivider;

  private FragmentNoteDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout addTagLl, @NonNull ImageView back, @NonNull TextView backText,
      @NonNull ConstraintLayout contentLayout, @NonNull NestedScrollView contentNsv,
      @NonNull TextView date, @NonNull TextView dateLabel, @NonNull ImageView delete,
      @NonNull EditText description, @NonNull ImageView done, @NonNull ImageView edit,
      @NonNull View middleDivider, @NonNull ProgressBar progressBar, @NonNull View space,
      @NonNull ImageView tagAdd, @NonNull TextView tagLabel, @NonNull ChipGroup tags,
      @NonNull EditText title, @NonNull View topDivider) {
    this.rootView = rootView;
    this.addTagLl = addTagLl;
    this.back = back;
    this.backText = backText;
    this.contentLayout = contentLayout;
    this.contentNsv = contentNsv;
    this.date = date;
    this.dateLabel = dateLabel;
    this.delete = delete;
    this.description = description;
    this.done = done;
    this.edit = edit;
    this.middleDivider = middleDivider;
    this.progressBar = progressBar;
    this.space = space;
    this.tagAdd = tagAdd;
    this.tagLabel = tagLabel;
    this.tags = tags;
    this.title = title;
    this.topDivider = topDivider;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNoteDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNoteDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_note_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNoteDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_tag_ll;
      LinearLayout addTagLl = ViewBindings.findChildViewById(rootView, id);
      if (addTagLl == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.back_text;
      TextView backText = ViewBindings.findChildViewById(rootView, id);
      if (backText == null) {
        break missingId;
      }

      id = R.id.content_layout;
      ConstraintLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.content_nsv;
      NestedScrollView contentNsv = ViewBindings.findChildViewById(rootView, id);
      if (contentNsv == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.date_label;
      TextView dateLabel = ViewBindings.findChildViewById(rootView, id);
      if (dateLabel == null) {
        break missingId;
      }

      id = R.id.delete;
      ImageView delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.description;
      EditText description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.done;
      ImageView done = ViewBindings.findChildViewById(rootView, id);
      if (done == null) {
        break missingId;
      }

      id = R.id.edit;
      ImageView edit = ViewBindings.findChildViewById(rootView, id);
      if (edit == null) {
        break missingId;
      }

      id = R.id.middle_divider;
      View middleDivider = ViewBindings.findChildViewById(rootView, id);
      if (middleDivider == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.space;
      View space = ViewBindings.findChildViewById(rootView, id);
      if (space == null) {
        break missingId;
      }

      id = R.id.tag_add;
      ImageView tagAdd = ViewBindings.findChildViewById(rootView, id);
      if (tagAdd == null) {
        break missingId;
      }

      id = R.id.tag_label;
      TextView tagLabel = ViewBindings.findChildViewById(rootView, id);
      if (tagLabel == null) {
        break missingId;
      }

      id = R.id.tags;
      ChipGroup tags = ViewBindings.findChildViewById(rootView, id);
      if (tags == null) {
        break missingId;
      }

      id = R.id.title;
      EditText title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.top_divider;
      View topDivider = ViewBindings.findChildViewById(rootView, id);
      if (topDivider == null) {
        break missingId;
      }

      return new FragmentNoteDetailBinding((ConstraintLayout) rootView, addTagLl, back, backText,
          contentLayout, contentNsv, date, dateLabel, delete, description, done, edit,
          middleDivider, progressBar, space, tagAdd, tagLabel, tags, title, topDivider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
